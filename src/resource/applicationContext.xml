<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:redis="http://www.springframework.org/schema/redis" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/mvc 
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       http://www.springframework.org/schema/data/jpa
	   http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
       http://www.springframework.org/schema/task 
 	   http://www.springframework.org/schema/task/spring-task-3.1.xsd"
	default-autowire="byName">
	<task:annotation-driven />
	<context:property-placeholder location="classpath:configure.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${db.driver}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.user}" />
		<property name="password" value="${db.password}" />
		<property name="minPoolSize" value="${db.minPoolSize}" />
		<property name="maxPoolSize" value="${db.maxPoolSize}" />
		<property name="initialPoolSize" value="${db.initialPoolSize}" />
		<property name="maxIdleTime" value="${db.maxIdleTime}" />
		<property name="acquireIncrement" value="${db.acquireIncrement}" />
		<property name="maxStatements" value="${db.maxStatements}" />
		<!--
			<property name="idleConnectionTestPeriod"
			value="${db.idleConnectionTestPeriod}" />
		-->
		<property name="acquireRetryAttempts" value="${db.acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${db.breakAfterAcquireFailure}" />
	</bean>
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan" value="com.ghrx.monitor.*"></property>
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="false" />
				<property name="databasePlatform" value="${db.dialect}" />
			</bean>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<jpa:repositories base-package="com.ghrx.monitor.*"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager">
	</jpa:repositories>
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
	<mvc:resources mapping="/js/**" location="/images/" />  
	<mvc:resources mapping="/js/**" location="/images/" />  
	<mvc:resources mapping="/js/**" location="/images/" />  
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="192.168.0.198" p:port="6379" p:password="ghrxkj"/>
	<bean id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
	<!-- redis template definition -->
	<bean id="template" name="template"
		class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" p:keySerializer-ref="stringRedisSerializer"
		p:hashKeySerializer-ref="stringRedisSerializer" p:valueSerializer-ref="stringRedisSerializer"
		p:hashValueSerializer-ref="stringRedisSerializer">

	</bean>
	<!-- <tx:advice id="txAdvice" transaction-manager="transManager"> -->
	<!-- <tx:attributes> -->
	<!-- 默认只读, 提升性能, 运行在当前的事务范围内，如果当前没有启动事务，那么就不在事务范围内运行 -->
	<!-- <tx:method name="*" read-only="true" propagation="SUPPORTS" /> -->
	<!-- </tx:attributes> -->
	<!-- </tx:advice> -->
	<!-- <context:annotation-config /> -->

	<context:component-scan
		base-package="com.ghrx.monitor.*"/>
	<!--
		<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors"> <list> <bean
		class="com.ghrx.footballcenter.interceptor.AnalysisInterceptor"></bean>
		</list> </property> </bean> <mvc:interceptors> <mvc:interceptor>
		对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* <mvc:mapping path="/**" /> <ref
		bean="analysisInterceptor" /> </mvc:interceptor> </mvc:interceptors>
	-->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonHttpMessageConverter" />
				<ref bean="stringHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
</beans>



